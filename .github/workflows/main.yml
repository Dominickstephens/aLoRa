name: Cleanup Notebook Widgets

on:
  # Triggers the workflow on push events to the 'main' branch
  push:
    branches:
      - main
  # Triggers the workflow on pull request events targeting the 'main' branch
  pull_request:
    branches:
      - main
      
jobs:
  cleanup_notebook:
    # Use an operating system runner suitable for Python
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a standard Python version
          
      # Step 3: Run the Python script to clean the notebook
      - name: Run Notebook Cleanup Script
        id: cleanup
        run: |
          # The Python script is included directly here as a multiline command.
          # We use a literal path for the notebook file.
          
          python <<EOF
          import json
          import os

          # Ruta del notebook (relative to the repo root)
          ruta = "Roberta_Emotions.ipynb" 
          
          if not os.path.exists(ruta):
              print(f"Error: Notebook file not found at '{ruta}'")
              exit(1)

          # Cargar el notebook como JSON
          with open(ruta, "r", encoding="utf-8") as f:
              data = json.load(f)

          # Limpia los widgets si estÃ¡n daÃ±ados
          if "widgets" in data.get("metadata", {}):
              print("Corrigiendo metadata.widgets...")
              del data["metadata"]["widgets"]
              
              # Set output to indicate a change was made
              print("::set-output name=changed::true")

              # Guardar el notebook limpio
              with open(ruta, "w", encoding="utf-8") as f:
                  json.dump(data, f, indent=1)

              print("Notebook corregido y guardado.")
          else:
              print("No se encontraron widgets daÃ±ados en la metadata.")
              print("::set-output name=changed::false")
          EOF
          
      # Step 4: Commit the change back to the repository if the file was modified
      # This is crucial because the script modifies a file in the workspace.
      - name: Commit changes (if any)
              # Step 4: Commit the change back to the repository using EndBug/add-and-commit
      - name: Commit changes (if any)
        # ONLY run this on a 'push' to the branch, and if the script reported a change
        if: steps.cleanup.outputs.changed == 'true' && github.event_name == 'push'
        uses: EndBug/add-and-commit@v9
        with:
          # ðŸ›‘ CUSTOMIZE THIS PATH ðŸ›‘
          # This MUST match the path defined in NOTEBOOK_PATH above!
          add: YOUR_NOTEBOOK_PATH_HERE.ipynb 
          message: "Fix: Cleaned up Jupyter Notebook widgets metadata"
          token: ${{ secrets.GITHUB_TOKEN }}
